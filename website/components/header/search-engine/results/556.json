{"type":"doc","filename":"devonfw-guide_devon4node.wiki_samples.asciidoc.html","anchor":"devonfw-guide_devon4node.wiki_samples.asciidoc_todo-example","title":"Todo example","breadcrumbs":["NodeJS","devon4node applications","devon4node Samples"],"text":"Todo example\n\nThis example is the backend part of an TO-DO application. It exposes and API where you can create, read, update and delete a TO-DO list.\n\n\nIn order to start the application, run the following commands in the todo folder:\n\n\n\n\n\n\n\nNow, you can access to the application using the URL http://localhost:3000/v1/todo/todos. If you want to now all endpoints exposed, you can see the swagger at: http://localhost:3000/v1/api.\n\n\nAlso, in this example we show you how to control the access to you application by implementing an authentication mechanism using JWT and rol based strategy. In order to access to the list of todos (http://localhost:3000/v1/todo/todos), first you need to call to POST http://localhost:3000/v1/auth/login and in the body you need to send the user information:\n\n\n\n\n\n\n\nIt will return a JWT token for the user user. The rol of this user is USER, so you can only access to the methods GET, POST and DELETE of the endpoint http://localhost:3000/v1/todo/todos. If you login with the user admin/admin, you will be able to access to the methods UPDATE and PATCH.\n\n\n\n"}