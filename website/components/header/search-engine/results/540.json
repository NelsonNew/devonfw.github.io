{"type":"doc","filename":"devonfw-guide_devonfw-github_contributing.asciidoc_using-github.html","anchor":"devonfw-guide_devonfw-github_contributing.asciidoc_forking","title":"Forking","breadcrumbs":["Contributing","Contributing","Using GitHub"],"text":"Forking\n\nThe github.com platform supports a wonderful feature to fork a repository.\nMake use of this create your private copy where you experiment and prepare your contribution in an isolated environment:\n\n\n\n\nVisit the original repository you want to contribute to.\n\n\nClick on the Fork button at the top right. If asked for a destination choose your personal GitHub account.\n\n\nClone this fork with a git-client to your local machine.\n\n\nCheckout the branch to use as baseline (see above section).\n\n\nFrom there create and checkout a new feature branch (named feature/«issue-id»-«feature-keywords»)\n\n\nStart your work on this new feature branch.\n\n\n\n\nSometimes, when working on your fork, there will be changes made to the original repository, which you might want to incorporate into your fork’s master branch. To do this, you can sync your fork:\n\n\n\n\nAdd the remote URL of the original repo to your list of remotes: git remote add upstream «remote-url»\n\n\nFetch the changes from the upstream remote: git fetch upstream\n\n\nCheck out your fork’s master branch: git checkout master (assuming you’re working on a feature branch)\n\n\nMerge the changes from upstream/master into your fork’s master branch: git merge upstream/master\n\n\nThis brings your fork’s master branch into sync with the original repository without losing changes on your local feature branch.\n\n\nSwitch back to your feature branch to continue work: git checkout «feature-branch»\n\n\n\n\n\n"}