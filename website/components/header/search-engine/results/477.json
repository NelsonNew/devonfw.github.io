{"type":"doc","filename":"devonfw-guide_devon4node.wiki_devon4node-architecture.asciidoc_devon4node-application-structure.html","anchor":"devonfw-guide_devon4node.wiki_devon4node-architecture.asciidoc_modules","title":"Modules","breadcrumbs":["NodeJS","devon4node Architecture","devon4node application structure"],"text":"Modules\n\nCreate a application module is simple, you only need to create an empty class with the decorator Module:\n\n\n\n\n\n\n\nIn the module you can define:\n\n\n\n\nImports: the list of imported modules that export the providers which are required in this module\n\n\nControllers: the set of controllers defined in this module which have to be instantiated\n\n\nProviders: the providers that will be instantiated by the Nest injector and that may be shared at least across this module\n\n\nExports: the subset of providers that are provided by this module and should be available in other modules which import this module\n\n\n\n\nThe main difference between Angular and NestJS is NestJS modules encapsulates providers by default. This means that it’s impossible to inject providers that are neither directly part of the current module nor exported from the imported modules. Thus, you may consider the exported providers from a module as the module’s public interface, or API. Example of modules graph:\n\n\n\n\n\n\n\nIn devon4node we three different kind of modules:\n\n\n\n\nAppModule: this is the root module. Everything that our application need must be imported here.\n\n\nGlobal Modules: this is a special kind of modules. When you make a module global, it’s accessible for every module in your application. Your can see it in the next diagram. It’s the same as the previous one, but now the CoreModule is global:\n\n\n\n\n\n\nOne example of global module is the CoreModule. In the CoreModule you must import every module which have providers that needs to be accessible in all modules of you application\n\n\n\nFeature (or application) modules: modules which contains the logic of our application. We must import it in the AppModule.\n\n\n\n\nFor more information about modules, see NestJS documentation page\n\n\n\n"}