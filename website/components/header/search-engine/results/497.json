{"type":"doc","filename":"devonfw-guide_devon4node.wiki_guides-dependency-injection.asciidoc.html","anchor":"devonfw-guide_devon4node.wiki_guides-dependency-injection.asciidoc","title":"Dependency Injection","breadcrumbs":["NodeJS","Guides","Dependency Injection"],"text":"Dependency Injection\n\nThe dependency injection is a well-known common design pattern applied by frameworks in all languages, like Spring in Java, Angular and others. The intention of this page is not to explain how dependency injection works, but instead how it is addressed by NestJS.\n\n\nNestJS resolve the dependency injection in their modules. When you define a provider in a module, it can be injected in all components of the module. By default, those providers are only available in the module where it is defined. The only way to export a module provider to other modules which import it is adding those provider to the export array. You can also reexport modules.\n\n\n"}