{"type":"doc","filename":"devonfw-guide_devon4node.wiki_guides-configuration-module.asciidoc.html","anchor":"devonfw-guide_devon4node.wiki_guides-configuration-module.asciidoc_override-configuration-properties","title":"Override configuration properties","breadcrumbs":["NodeJS","Guides","Configuration Module"],"text":"Override configuration properties\n\nSometimes, you want to keep some configuration property secure, and you do not want to publish it to the repository, or you want to reuse some configuration file but you need to change some properties. For those scenarios, you can override configuration properties by defining a environment variable. The pattern for the environment variables name is: the property name in upper case, if it is a nested object you must separate the properties with underscores (_). For example, if you want to override the property host, you can do: export HOST=\"newhost\" (in windows: set HOST=\"newhost\"). It also works with objects. For example, if you want to change the value of secret in the property jwtConfig for this example, you can set a environment variable like this: export JWTCONFIG_SECRET=\"newsecret\". If you want to override jwtConfig totally (or partially) you can set a JSON string. It will take object and merge the jwtConfig property with the properties defined inside the environment variable. The other properties maintain their value. The behavior is the same for the nested objects. Example: JWTCONFIG='{\"secret\":\"mysecret\"}' will override the jwtConfig.secret value, but the other values will remain with the value defined at configuration file.\n\n\n\n\n\n\n\n\nyou can only override properties that exists in the config file. If you want to use a secret configuration that will be setted at runtime, first you must define it in the config file and set a fake value or just an empty string.\n\n\n\n\n\n\n"}