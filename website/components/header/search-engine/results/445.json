{"type":"doc","filename":"devonfw-guide_devon4ng.wiki_guide-working-with-angular-cli.asciidoc.html","anchor":"devonfw-guide_devon4ng.wiki_guide-working-with-angular-cli.asciidoc_generating-code","title":"Generating Code","breadcrumbs":["Angular","Angular","Working with Angular CLI"],"text":"Generating Code\n\nCreating a new Angular CLI project\n\nFor creating a new Angular CLI project the command ng new is used.\n\n\nThe following command creates a new application named my-app.\n\n\n\n\n\n\n\n\nCreating a new feature module\n\nA new feature module can be created via ng generate module` command.\n\n\nThe following command generates a new feature module named todo.\n\n\n\n\n\n\n\n\n\n\nFigure 50. Generate a module with Angular CLI\n\n\n\n\n\nTip\n\n\nThe created feature module needs to be added to the AppModule by hand.\nOther option would be to define a lazy route in AppRoutingModule to make this a lazy loaded module.\n\n\n\n\n\n\nCreating a new component\n\nTo create components the command ng generate component can be used.\n\n\nThe following command will generate the component todo-details inside the components layer of todo module.\nIt will generate a class, a html file, a css file and a test file.\nAlso, it will register this component as declaration inside the nearest module - this ist TodoModule.\n\n\n\n\n\n\n\n\n\n\nFigure 51. Generate a component with Angular CLI\n\n\n\n\n\nTip\n\n\nIf you want to export the component, you have to add the component to exports array of the module.\nThis would be the case if you generate a component inside shared module.\n\n\n\n\n\n\n\n"}