{"type":"doc","filename":"devonfw-guide_devon4node.wiki_guides-configuration-module.asciidoc.html","anchor":"devonfw-guide_devon4node.wiki_guides-configuration-module.asciidoc_configure-the-configmodule","title":"Use the configuration service","breadcrumbs":["NodeJS","Guides","Configuration Module"],"text":"Configure the ConfigModule\n\nWhen you register the ConfigModule in your application you can configure it. As the ConfigModule should be a module that you will need in all modules in your application, it is registered by default in the CoreModule (remember that CoreModule is global).\n\n\nExample:\n\n\n\n\n\n\n\nThe values that you can provide to the ConfigModule are:\n\n\n\n\nconfigDir: path to the directory where all config files are stored. This is the path to the compiled JavaScript files, not the path that include the TypeScript files. The default value is: './dist/config'\n\n\nconfigType: the type of the config files. You can use the default type generated at shared/config/config.model.ts or generate you own type. In this type is where you can define the validation by using the class-validator decorators.\n\n\n\n\n\nUse the configuration service\n\nTo use the configuration service, you only need to inject it as dependency. As configuration module is defined in the core module, it will be available everywhere in your application. Example:\n\n\n\n\n\n\n\nThe generic type is required in order to provide the intellisense to configService.values.\n\n\n\n"}