{"type":"doc","filename":"devonfw-guide_my-thai-star.wiki_deployment.asciidoc.html","anchor":"devonfw-guide_my-thai-star.wiki_deployment.asciidoc_container-schema","title":"Container Schema","breadcrumbs":["MyThaiStar","CI/CD","Deployment"],"text":"Container Schema\n\n3 Docker containers are being used for the deployment of My Thai Star:\n\n\n\n\nNginx for the Reverse Proxy\n\n\ntomcat for the Java Server\n\n\nNginx for the Angular Client\n\n\n\n\nThe usage of the Reverse Proxy will allow the client to call via /api every single Java Serverâ€™s REST operation. Moreover, there will only be 1 port in usage in the remote Docker host, the one mapped for the Reverse Proxy: 8080.\nBesides the deployment itself using Nginx and tomcat, both client and server are previously built using NodeJS and maven images. Artifacts produced by them will be pasted in servers' containers using multi-stage docker builds. It will all follow this schema:\n\n\n\n\n\n\n\nThis orchestration of all 3 containers will be done by using a docker-compose.yml file. To redirect traffic from one container to another (i.e. reverse-proxy to angular client or angular client to java server) will be done by using, as host names, the service name docker-compose defines for each of them, followed by the internally exposed port:\n\n\n\n\nhttp://reverse-proxy:80\n\n\nhttp://angular:80\n\n\nhttp://java:8080\n\n\n\n\n\n\n\n\n\n\nA implementation using Traefik as reverse proxy instead of NGINX is also available.\n\n\n\n\n\n\n"}