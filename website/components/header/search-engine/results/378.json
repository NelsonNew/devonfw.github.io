{"type":"doc","filename":"devonfw-guide_devon4ng.wiki_guide-ionic-from-code-to-android.asciidoc.html","anchor":"devonfw-guide_devon4ng.wiki_guide-ionic-from-code-to-android.asciidoc_from-ionic-to-android-project","title":"From Ionic to Android project","breadcrumbs":["Angular","Ionic","Ionic to android"],"text":"From Ionic to Android project\n\nWhen a native application is being designed, sometimes, functionalities that uses camera, geolocation, push notification, …​ are requested. To resolve these requests, Capacitor can be used.\n\n\nIn general terms, Capacitor wraps apps made with Ionic (HTML, SCSS, Typescript) into WebViews that can be displayed in native applications (Android, IOS) and allows the developer to access native functionalities like the ones said before.\n\n\nInstalling capacitor is as easy as installing any node module, just a few commands have to be run in a console:\n\n\n\n\ncd name-of-ionic-4-app\n\n\nnpm install --save @capacitor/core @capacitor/cli\n\n\n\n\nThen, it is necessary to initialize capacitor with some information: app id, name of the app and the directory where your app is stored. To fill this information, run:\n\n\n\n\nnpx cap init\n\n\n\n\nModifications\n\nThroughout the development process, usually back-end and front-end are on a local computer, so it’s a common practice to have different configuration files for each environment (commonly production and development). Ionic uses an angular.json file to store those configurations and some rules to be applied.\n\n\nIf a back-end is hosted on http://localhost:8081, and that direction is used in every environment, the application built for android will not work because computer and device do not have the same localhost. Fortunately, different configurations can be defined.\n\n\nAndroid Studio uses 10.0.0.2 as alias for 127.0.0.1 (computer’s localhost) so adding http://10.0.0.2:8081 in a new environment file and modifying angular.json accordingly, will make possible connect front-end and back-end.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuild\n\nOnce configured, it is necessary to build the Ionic app using this new configuration:\n\n\n\n\nionic build --configuration=android\n\n\n\n\nThe next commands copy the build application on a folder named android and open android studio.\n\n\n\n\nnpx cap add android\n\n\nnpx cap copy\n\n\nnpx cap open android\n\n\n\n\n\n\n"}