{"type":"doc","filename":"devonfw-guide_devon4node.wiki_samples-step-by-step.asciidoc.html","anchor":"devonfw-guide_devon4node.wiki_samples-step-by-step.asciidoc_create-the-application","title":"Create the application","breadcrumbs":["NodeJS","devon4node applications","Create the employee sample step by step"],"text":"Create the application\n\n\n\nInstall Nest CLI\n\nExecute the command yarn global add @nestjs/cli\n\n\n\nInstall devon4node schematics\n\n\nExecute the command yarn global add @devon4node/schematics\n\n\nCreate the new application\n\nExecute the command nest g -c @devon4node/schematics application employee\n\n\n\nThen, we need to add some components, go inside the project folder and execute the following commands:\n\nGo inside project folder: cd employee.\n\n\nConfig module: nest g -c @devon4node/schematics config-module.\n\n\nTypeORM database, choose sqlite DB when asked nest g -c @devon4node/schematics typeorm.\n\n\nAdd security: nest g -c @devon4node/schematics security.\n\n\nSwagger module: nest g -c @devon4node/schematics swagger.\n\n\nAuth-jwt authentication: nest g -c @devon4node/schematics auth-jwt.\n\n\nAdd an application module: nest g -c @devon4node/schematics module employee.\n\n\nAdd CRUD component: nest g -c @devon4node/schematics crud employee/employee.\n\n\nWith this, you will generate the following files:\n\n\n\n\n\n\n\n\nOpen the VSCode\n\nExecute the commands:\n\n\n\n\n\n\n\n\nFill in the entity: src/app/employee/model/entities/employee.entity.ts\n\n\n\nAdd the columns\n\n\n\n\n\n\n\nAdd the validations\n\n\n\n\n\n\n\nAdd the transformations\n\nIn this specific case, we will not transform any property, but you can see an example in the src/app/shared/model/entities/base-entity.entity.ts file.\n\n\n\n\n\n\n\n\nAdd swagger metadata\n\n\n\n\n\n\n\n\n\n\nAdd swagger metadata to src/app/employee/controllers/employee.crud.controller.ts\n\n\n\n\n\n\n\nGenerate database migrations\n\n\n\nBuild the application: yarn build\n\n\nIn order to create migration scripts with TypeORM, you need to install ts-node: yarn global add ts-node\n\n\nGenerate the tables creation migration: yarn run typeorm migration:generate -n CreateTables\n\n\n\n\n\n\nThe output will be something similar to:\n\n\n\n\n\n\n\nThe number in the name is a timestamp, so may change in your application.\n\n\n\nCreate a migration to insert data:`yarn run typeorm migration:generate -n InsertData`\n\n\n\n\n\n\nand fill in with the following code:\n\n\n\n\n\n\n\n\n\n\n\nStart the application: yarn start:dev\n\n\n\n\n\n\n\nCheck the swagger endpoint: http://localhost:3000/v1/api\n\n\n\n\n\n\n\nMake petitions to the employee CRUD: http://localhost:3000/v1/employee/employees\n\n\n\n\n\n\n\nWrite the tests\n\nAs we do not create any method, only add some properties to the entity, all application must be tested by the autogenerated code. As we add some modules, you need to uncomment some lines in the src/app/core/configuration/services/configuration.service.spec.ts:\n\n\n\n\n\n\n\nAnd the output should be:\n\n\n\n\n\n\n\n\n\n\n\n\n"}