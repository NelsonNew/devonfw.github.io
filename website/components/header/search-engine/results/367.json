{"type":"doc","filename":"devonfw-guide_devon4ng.wiki_guide-eslint.asciidoc.html","anchor":"devonfw-guide_devon4ng.wiki_guide-eslint.asciidoc_what-about-tslint","title":"What about TSLint?","breadcrumbs":["Angular","Cookbook","Angular ESLint support"],"text":"What about TSLint?\n\nTSLint is a fantastic tool. It is a linter that was written specifically to work based on the TypeScript AST format. This has advantages and disadvantages, as with most decisions we are faced with in software engineering!\n\n\nOne advantage is there is no tooling required to reconcile differences between ESLint and TypeScript AST formats, but the major disadvantage is that the tool is therefore unable to reuse any of the previous work which has been done in the JavaScript ecosystem around linting, and it has to re-implement everything from scratch. Everything from rules to auto-fixing capabilities and more.\n\n\nHowever, the backers behind TSLint announced in 2019 that they would be deprecating TSLint in favor of supporting typescript-eslint in order to benefit the community. You can read more about that here\n\n\nThe TypeScript Team themselves also announced their plans to move the TypeScript codebase from TSLint to typescript-eslint, and they have been big supporters of this project. More details at https://github.com/microsoft/TypeScript/issues/30553\n\n\nAngular ESLint support comes from the angular-eslint tooling package. Angular documentation also links to this repository as you can check in the ng lint section of the Angular CLI documentation.\n\n\n\n"}