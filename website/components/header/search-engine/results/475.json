{"type":"doc","filename":"devonfw-guide_devon4node.wiki_devon4node-architecture.asciidoc_devon4node-application-structure.html","anchor":"devonfw-guide_devon4node.wiki_devon4node-architecture.asciidoc_devon4node-application-structure","title":"devon4node application structure","breadcrumbs":["NodeJS","devon4node Architecture","devon4node application structure"],"text":"devon4node application structure\n\nAlthough there are many frameworks to create backend applications in NodeJS, none of them effectively solve the main problem of - Architecture. This is the main reason we have chosen NestJS for the devon4node applications. Besides, NestJS is highly inspired by Angular, therefore a developer who knows Angular can use his already acquired knowledge to write devon4node applications.\n\n\nNestJS adopts various Angular concepts, such as dependency injection, piping, interceptors and modularity, among others. By using modularity we can reuse some of our modules between applications. One example that devon4node provide is the mailer module.\n\n\n"}